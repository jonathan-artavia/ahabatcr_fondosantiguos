@using Fondos_Antiguos.Models;
@model CatalogoModel

@{
    this.ViewData["Title"] = "Editar Registro";
}
<div>
    @if (Model != null && !Model.ID.Equals(0))
    {
        <h4>@ViewData["Title"]</h4>
        <hr />
        <nav class="navbar navbar-expand-md navbar-light bg-light">
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent" aria-expanded="true">
                <ul class="navbar-nav mr-auto">
                    <li>
                        <input type="submit" value="@Fondos_Antiguos.Localization.CatalogoRes.btnGuardar" form="frmEditar" class="btn btn-primary" />
                    </li>
                </ul>
            </div>
        </nav>
        <form action="@Url.Action("Editar")" class="row" id="frmEditar" method="POST">
            <div class="col-lg-6">
                @Html.ValidationSummary()
                @if (Model.Origen == 2)
                {
                    <div class="form-group">
                        @Html.LabelFor(m => m.Signatura, new { @class = "col-md-4 control-label" })
                        @Html.EditorFor(m => Model.Signatura, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.Signatura, "", new { @class = "text-danger" })
                    </div>
                }

                <div class="form-group">
                    @Html.LabelFor(m => m.Fecha, new { @class = "col-md-4 control-label" })
                    @Html.EditorFor(m => Model.Fecha, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Fecha, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Contenido, new { @class = "col-md-4 control-label" })
                    @Html.TextAreaFor(modelItem => modelItem.Contenido, 2, 1, new Dictionary<string, object>() { { "class", "form-control" } })
                    @Html.ValidationMessageFor(m => m.Contenido, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Observaciones, new { @class = "col-md-4 control-label" })
                    @Html.TextAreaFor(modelItem => modelItem.Observaciones, 2, 1, new Dictionary<string, object>() { { "class", "form-control" } })
                    @Html.ValidationMessageFor(m => m.Observaciones, "", new { @class = "text-danger" })
                </div>
                @if (Model.Origen == 0)
                {
                    <div class="form-group">
                        @Html.Partial("EditarLugar", Model)
                    </div>
                    <div class="form-group">
                        @Html.Partial("EditarMateria", Model)
                    </div>
                }
            </div>
            <div class="col-lg-6">
                @if (Model.Origen == 0)
                {
                    <div class="form-group">
                        <div class="form-row">
                            <div class="col-sm-6">
                                @Html.LabelFor(m => m.SeriesNombre, new { @class = "col-md-4 control-label" })
                                @Html.HiddenFor(modelItem => modelItem.IdSerie)
                                @Html.TextBoxFor(modelItem => modelItem.SeriesNombre, null, new { @class = "form-control", id = "SeriesNombre", readOnly = (Model.IdSerie.HasValue ? "true" : "false") })
                                @Html.ValidationMessageFor(m => m.IdSerie, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-4 text-center" style="display: flex; align-items: flex-end; /* vertically aligned! */ justify-content: center;">
                                <button id="modalActivate" type="button" class="btn btn-danger" data-toggle="modal" data-target="#seriesModal" style="vertical-align: middle">
                                    @Fondos_Antiguos.Localization.CatalogoRes.btnSeleccionarSerie
                                </button>
                            </div>
                        </div>
                    </div>
                }
                <div class="form-group">
                    @Html.LabelFor(m => m.Fichero, new { @class = "col-md-4 control-label" })
                    @Html.EditorFor(m => m.Fichero, "", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Fichero, "", new { @class = "text-danger" })
                </div>
                @if (Model.Origen == 0)
                {
                    <div class="form-group">
                        @Html.LabelFor(m => m.NumCaja, new { @class = "col-md-4 control-label" })
                        @Html.EditorFor(m => m.NumCaja, "", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.NumCaja, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.NumTomo, new { @class = "col-md-4 control-label" })
                        @Html.EditorFor(m => m.NumTomo, "", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.NumTomo, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Folio, new { @class = "col-md-4 control-label" })
                        @Html.EditorFor(m => m.Folio, "", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.Folio, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Libro, new { @class = "col-md-4 control-label" })
                        @Html.EditorFor(m => m.Libro, "", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.Libro, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.NumExpediente, new { @class = "col-md-4 control-label" })
                        @Html.EditorFor(m => m.NumExpediente, "", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.NumExpediente, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.NumCarpeta, new { @class = "col-md-4 control-label" })
                        @Html.EditorFor(m => m.NumCarpeta, "", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.NumCarpeta, "", new { @class = "text-danger" })
                    </div>
                }
                else
                {
                    <div class="form-group">
                        @Html.LabelFor(m => m.Lugar, new { @class = "col-md-4 control-label" })
                        @Html.EditorFor(m => m.Lugar, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.Lugar, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.HistMaterias, new { @class = "col-md-4 control-label" })
                        @Html.EditorFor(m => m.HistMaterias, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.HistMaterias, "", new { @class = "text-danger" })
                    </div>
                }
            </div>
            <div class="col form-group">
                @Html.HiddenFor(modelItem => modelItem.ID)
                @Html.HiddenFor(modelItem => modelItem.Origen)
                @Html.HiddenFor(modelItem => modelItem.Mes)
                @Html.HiddenFor(modelItem => modelItem.Año)
                @Html.AntiForgeryToken()
            </div>
            <!-- Serie Modal -->
            <div class="modal fade left" id="seriesModal" tabindex="-1" role="dialog" aria-labelledby="modalTitulo" aria-hidden="true">
                <div class="modal-dialog modal-sm modal-side modal-bottom-left" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="modalTitulo">Seleccione una serie existente...</h5>
                        </div>
                        <div class="modal-body">
                            @{
                                if (ViewBag.SerieList != null)
                                {
                                    IEnumerable<SerieModel> list = ViewBag.SerieList;
                                    var r = list.Select(x =>
                                    {
                                        return new SelectListItem() { Text = x.Nombre, Value = x.ID.ToString() };
                                    });
                                    @Html.DropDownList("IdSerieDropDown", r, "", new { @class = "form-control" });
                                }
                            }
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-primary" data-dismiss="modal">Elejir</button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    }
    else
    {
        <div class="card-body text-danger">
            @Html.ValidationMessage("")
        </div>
    }
</div>

<!-- Materia Modal -->
<div class="modal fade left" id="nuevaMateriaModal" tabindex="-1" role="dialog" aria-labelledby="modalTitulo2" aria-hidden="true">
    <div class="modal-dialog modal-sm modal-side modal-bottom-left" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitulo2">Seleccione una materia existente...</h5>
            </div>
            <div class="modal-body">
                @{
                    if (ViewBag.MateriaList != null)
                    {
                        IEnumerable<MateriaModel> list = ViewBag.MateriaList;
                        var r = list.Select(x =>
                        {
                            return new SelectListItem() { Text = x.Nombre, Value = x.ID.ToString() };
                        });
                        @Html.DropDownList("IdMateriaDropDown", r, "", new { @class = "form-control" });
                    }
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="OnMateriaAgregada()">Elejir</button>
            </div>
        </div>
    </div>
</div>

<!-- Lugar Modal -->
<div class="modal fade left" id="nuevoLugarModal" tabindex="-1" role="dialog" aria-labelledby="modalTitulo2" aria-hidden="true">
    <div class="modal-dialog modal-sm modal-side modal-bottom-left" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitulo2">Seleccione un lugar existente...</h5>
            </div>
            <div class="modal-body">
                @{
                    if (ViewBag.LugarList != null)
                    {
                        IEnumerable<LugarModel> list = ViewBag.LugarList;
                        var r = list.Select(x =>
                        {
                            return new SelectListItem() { Text = x.Nombre, Value = x.ID.ToString() };
                        });
                        @Html.DropDownList("IdLugarDropDown", r, "", new { @class = "form-control" });
                    }
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="OnLugarAgregada()">Elejir</button>
            </div>
        </div>
    </div>
</div>

<div class="container">
    @Html.ActionLink(Fondos_Antiguos.Localization.ComunResource.lnkVolverALista, "Index", null, new { @class = "btn btn-outline-secondary" })
</div>